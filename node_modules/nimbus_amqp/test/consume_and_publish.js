var vows = require('vows'),
		assert = require('assert');

var amqp = require('../index.js');


var the_message = {a:1, b:2, c:"sdfsdf"};
var received_message = null;

function got_message(m, a, b, raw){
	received_message = m;
	raw.acknowledge();
}

vows.describe('amqp module - publish & consume').addBatch({
	'when init called':{
		topic: function(){
				amqp.factory({host: 'rabbitmq-03.devel.nimbus',
								 	 queues: { test: { prefetch_count:1, on_message: got_message, durable:true, autoDelete:false}},
									 exchanges: {test: { durable:true}}}
					, this.callback);
		},
		'there should be no error': function(err, object, default_name){
				assert.isNull(err);
		},
		'and message published':{
			topic: function(amqp){
				setTimeout(function(){
						amqp.test.publish('test', the_message, 
								function(err){
									assert.isNull(err)
								});
				}, 0);
				var callback = this.callback;
				setTimeout(function(){callback();}, 1000);
			},
			'should get it back': function(){
				assert.deepEqual(received_message, the_message);
			}
			}
		}
	
}).export(module);

